name: EC2 Docker Deploy

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/better-board
  VERSION: ${{ github.sha }}
  NAME: nestjs

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          context: .

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, Linux, x64]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run
        run: |
          docker run --add-host=host.docker.internal:host-gateway \
            -e PORT=${{ secrets.PORT }}
            -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
            -e POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
            -e POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }} \
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            -e POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e SENTRY_DSN=${{ secrets.SENTRY_DSN }} \
            -e SLACK_WEBHOOK=${{ secrets.SLACK_WEBHOOK }} \
            -e SWAGGER_USERNAME=${{ secrets.SWAGGER_USERNAME }} \
            -e SWAGGER_PASSWORD=${{ secrets.SWAGGER.PASSWORD }} \
            -e -d -p 80:3000 --name ${{ env.NAME }} --restart always ${{ env.DOCKER_IMAGE }}:latest